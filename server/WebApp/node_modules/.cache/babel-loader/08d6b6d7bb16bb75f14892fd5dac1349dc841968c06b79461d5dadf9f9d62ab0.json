{"ast":null,"code":"const API_BASE_URL=process.env.REACT_APP_API_URL||'';export const api={// Time Entries\nasync getTimeEntries(){const response=await fetch(\"\".concat(API_BASE_URL,\"/api/time-entries\"));if(!response.ok){throw new Error('Failed to fetch time entries');}return response.json();},async createTimeEntry(data){const response=await fetch(\"\".concat(API_BASE_URL,\"/api/time-entries\"),{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(data)});if(!response.ok){throw new Error('Failed to create time entry');}return response.json();},// Users\nasync getUsers(){const response=await fetch(\"\".concat(API_BASE_URL,\"/api/users\"));if(!response.ok){throw new Error('Failed to fetch users');}return response.json();},async createUser(data){const response=await fetch(\"\".concat(API_BASE_URL,\"/api/users\"),{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(data)});if(!response.ok){throw new Error('Failed to create user');}return response.json();}};","map":{"version":3,"names":["API_BASE_URL","process","env","REACT_APP_API_URL","api","getTimeEntries","response","fetch","concat","ok","Error","json","createTimeEntry","data","method","headers","body","JSON","stringify","getUsers","createUser"],"sources":["/Users/jasonbaker/Documents/ICAV Time Tracker/WebApp/src/services/api.ts"],"sourcesContent":["const API_BASE_URL = process.env.REACT_APP_API_URL || '';\n\nexport interface ApiTimeEntry {\n  id: string;\n  userId: string;\n  technicianName: string;\n  customerName: string;\n  clockInTime: string;\n  clockOutTime?: string;\n  lunchStartTime?: string;\n  lunchEndTime?: string;\n  isActive: boolean;\n  isOnLunch: boolean;\n  duration?: number;\n  formattedDuration?: string;\n  lunchDuration?: number;\n  formattedLunchDuration?: string;\n}\n\nexport interface ApiUser {\n  id: string;\n  username: string;\n  displayName: string;\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport const api = {\n  // Time Entries\n  async getTimeEntries(): Promise<ApiTimeEntry[]> {\n    const response = await fetch(`${API_BASE_URL}/api/time-entries`);\n    if (!response.ok) {\n      throw new Error('Failed to fetch time entries');\n    }\n    return response.json();\n  },\n\n  async createTimeEntry(data: {\n    userId: string;\n    technicianName: string;\n    customerName: string;\n    clockInTime: string;\n    clockOutTime?: string;\n    lunchStartTime?: string;\n    lunchEndTime?: string;\n  }): Promise<ApiTimeEntry> {\n    const response = await fetch(`${API_BASE_URL}/api/time-entries`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(data),\n    });\n    if (!response.ok) {\n      throw new Error('Failed to create time entry');\n    }\n    return response.json();\n  },\n\n  // Users\n  async getUsers(): Promise<ApiUser[]> {\n    const response = await fetch(`${API_BASE_URL}/api/users`);\n    if (!response.ok) {\n      throw new Error('Failed to fetch users');\n    }\n    return response.json();\n  },\n\n  async createUser(data: { username: string; displayName: string }): Promise<ApiUser> {\n    const response = await fetch(`${API_BASE_URL}/api/users`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(data),\n    });\n    if (!response.ok) {\n      throw new Error('Failed to create user');\n    }\n    return response.json();\n  },\n}; "],"mappings":"AAAA,KAAM,CAAAA,YAAY,CAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,EAAI,EAAE,CA2BxD,MAAO,MAAM,CAAAC,GAAG,CAAG,CACjB;AACA,KAAM,CAAAC,cAAcA,CAAA,CAA4B,CAC9C,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,IAAAC,MAAA,CAAIR,YAAY,qBAAmB,CAAC,CAChE,GAAI,CAACM,QAAQ,CAACG,EAAE,CAAE,CAChB,KAAM,IAAI,CAAAC,KAAK,CAAC,8BAA8B,CAAC,CACjD,CACA,MAAO,CAAAJ,QAAQ,CAACK,IAAI,CAAC,CAAC,CACxB,CAAC,CAED,KAAM,CAAAC,eAAeA,CAACC,IAQrB,CAAyB,CACxB,KAAM,CAAAP,QAAQ,CAAG,KAAM,CAAAC,KAAK,IAAAC,MAAA,CAAIR,YAAY,sBAAqB,CAC/Dc,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CAAC,CACDC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAACL,IAAI,CAC3B,CAAC,CAAC,CACF,GAAI,CAACP,QAAQ,CAACG,EAAE,CAAE,CAChB,KAAM,IAAI,CAAAC,KAAK,CAAC,6BAA6B,CAAC,CAChD,CACA,MAAO,CAAAJ,QAAQ,CAACK,IAAI,CAAC,CAAC,CACxB,CAAC,CAED;AACA,KAAM,CAAAQ,QAAQA,CAAA,CAAuB,CACnC,KAAM,CAAAb,QAAQ,CAAG,KAAM,CAAAC,KAAK,IAAAC,MAAA,CAAIR,YAAY,cAAY,CAAC,CACzD,GAAI,CAACM,QAAQ,CAACG,EAAE,CAAE,CAChB,KAAM,IAAI,CAAAC,KAAK,CAAC,uBAAuB,CAAC,CAC1C,CACA,MAAO,CAAAJ,QAAQ,CAACK,IAAI,CAAC,CAAC,CACxB,CAAC,CAED,KAAM,CAAAS,UAAUA,CAACP,IAA+C,CAAoB,CAClF,KAAM,CAAAP,QAAQ,CAAG,KAAM,CAAAC,KAAK,IAAAC,MAAA,CAAIR,YAAY,eAAc,CACxDc,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CAAC,CACDC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAACL,IAAI,CAC3B,CAAC,CAAC,CACF,GAAI,CAACP,QAAQ,CAACG,EAAE,CAAE,CAChB,KAAM,IAAI,CAAAC,KAAK,CAAC,uBAAuB,CAAC,CAC1C,CACA,MAAO,CAAAJ,QAAQ,CAACK,IAAI,CAAC,CAAC,CACxB,CACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}