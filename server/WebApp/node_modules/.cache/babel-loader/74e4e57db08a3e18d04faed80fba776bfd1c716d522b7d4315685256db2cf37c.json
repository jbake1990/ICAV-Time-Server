{"ast":null,"code":"import React,{createContext,useContext,useReducer,useEffect}from'react';import{api,setAuthToken,removeAuthToken}from'../services/api';import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext(undefined);const initialState={user:null,token:null,isAuthenticated:false,isLoading:false,error:null};function authReducer(state,action){switch(action.type){case'AUTH_START':return{...state,isLoading:true,error:null};case'AUTH_SUCCESS':return{...state,user:action.payload.user,token:action.payload.token,isAuthenticated:true,isLoading:false,error:null};case'AUTH_FAILURE':return{...state,user:null,token:null,isAuthenticated:false,isLoading:false,error:action.payload};case'AUTH_LOGOUT':return{...initialState};case'CLEAR_ERROR':return{...state,error:null};default:return state;}}export const AuthProvider=_ref=>{let{children}=_ref;const[state,dispatch]=useReducer(authReducer,initialState);// Check for existing session on app start\nuseEffect(()=>{const checkSession=async()=>{const token=localStorage.getItem('authToken');if(token){dispatch({type:'AUTH_START'});try{const response=await api.verifySession();dispatch({type:'AUTH_SUCCESS',payload:{user:response.user,token:response.token}});}catch(error){// Session is invalid, clear it\nremoveAuthToken();dispatch({type:'AUTH_FAILURE',payload:'Session expired'});}}};checkSession();},[]);const login=async(username,password)=>{dispatch({type:'AUTH_START'});try{console.log('Starting login for username:',username);const response=await api.login(username,password);console.log('Login API response:',response);// Store token in localStorage\nsetAuthToken(response.token);dispatch({type:'AUTH_SUCCESS',payload:{user:response.user,token:response.token}});console.log('Login successful, user authenticated');}catch(error){console.error('Login error in AuthContext:',error);const errorMessage=error instanceof Error?error.message:'Login failed';dispatch({type:'AUTH_FAILURE',payload:errorMessage});}};const logout=async()=>{try{await api.logout();}catch(error){console.error('Logout error:',error);}finally{dispatch({type:'AUTH_LOGOUT'});}};const clearError=()=>{dispatch({type:'CLEAR_ERROR'});};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:{state,login,logout,clearError},children:children});};export const useAuth=()=>{const context=useContext(AuthContext);if(context===undefined){throw new Error('useAuth must be used within an AuthProvider');}return context;};","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","api","setAuthToken","removeAuthToken","jsx","_jsx","AuthContext","undefined","initialState","user","token","isAuthenticated","isLoading","error","authReducer","state","action","type","payload","AuthProvider","_ref","children","dispatch","checkSession","localStorage","getItem","response","verifySession","login","username","password","console","log","errorMessage","Error","message","logout","clearError","Provider","value","useAuth","context"],"sources":["/Users/jasonbaker/Documents/ICAV Time Tracker/icav-time-dev/server/WebApp/src/contexts/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport { User } from '../types';\nimport { api, setAuthToken, removeAuthToken } from '../services/api';\n\ninterface AuthState {\n  user: User | null;\n  token: string | null;\n  isAuthenticated: boolean;\n  isLoading: boolean;\n  error: string | null;\n}\n\ntype AuthAction =\n  | { type: 'AUTH_START' }\n  | { type: 'AUTH_SUCCESS'; payload: { user: User; token: string } }\n  | { type: 'AUTH_FAILURE'; payload: string }\n  | { type: 'AUTH_LOGOUT' }\n  | { type: 'CLEAR_ERROR' };\n\ninterface AuthContextType {\n  state: AuthState;\n  login: (username: string, password: string) => Promise<void>;\n  logout: () => void;\n  clearError: () => void;\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\nconst initialState: AuthState = {\n  user: null,\n  token: null,\n  isAuthenticated: false,\n  isLoading: false,\n  error: null,\n};\n\nfunction authReducer(state: AuthState, action: AuthAction): AuthState {\n  switch (action.type) {\n    case 'AUTH_START':\n      return {\n        ...state,\n        isLoading: true,\n        error: null,\n      };\n    case 'AUTH_SUCCESS':\n      return {\n        ...state,\n        user: action.payload.user,\n        token: action.payload.token,\n        isAuthenticated: true,\n        isLoading: false,\n        error: null,\n      };\n    case 'AUTH_FAILURE':\n      return {\n        ...state,\n        user: null,\n        token: null,\n        isAuthenticated: false,\n        isLoading: false,\n        error: action.payload,\n      };\n    case 'AUTH_LOGOUT':\n      return {\n        ...initialState,\n      };\n    case 'CLEAR_ERROR':\n      return {\n        ...state,\n        error: null,\n      };\n    default:\n      return state;\n  }\n}\n\nexport const AuthProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n  const [state, dispatch] = useReducer(authReducer, initialState);\n\n  // Check for existing session on app start\n  useEffect(() => {\n    const checkSession = async () => {\n      const token = localStorage.getItem('authToken');\n      if (token) {\n        dispatch({ type: 'AUTH_START' });\n        try {\n          const response = await api.verifySession();\n          dispatch({\n            type: 'AUTH_SUCCESS',\n            payload: { user: response.user, token: response.token },\n          });\n        } catch (error) {\n          // Session is invalid, clear it\n          removeAuthToken();\n          dispatch({ type: 'AUTH_FAILURE', payload: 'Session expired' });\n        }\n      }\n    };\n\n    checkSession();\n  }, []);\n\n  const login = async (username: string, password: string) => {\n    dispatch({ type: 'AUTH_START' });\n    try {\n      console.log('Starting login for username:', username);\n      const response = await api.login(username, password);\n      console.log('Login API response:', response);\n      \n      // Store token in localStorage\n      setAuthToken(response.token);\n      \n      dispatch({\n        type: 'AUTH_SUCCESS',\n        payload: { user: response.user, token: response.token },\n      });\n      console.log('Login successful, user authenticated');\n    } catch (error) {\n      console.error('Login error in AuthContext:', error);\n      const errorMessage = error instanceof Error ? error.message : 'Login failed';\n      dispatch({ type: 'AUTH_FAILURE', payload: errorMessage });\n    }\n  };\n\n  const logout = async () => {\n    try {\n      await api.logout();\n    } catch (error) {\n      console.error('Logout error:', error);\n    } finally {\n      dispatch({ type: 'AUTH_LOGOUT' });\n    }\n  };\n\n  const clearError = () => {\n    dispatch({ type: 'CLEAR_ERROR' });\n  };\n\n  return (\n    <AuthContext.Provider value={{ state, login, logout, clearError }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}