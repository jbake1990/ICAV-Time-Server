{"ast":null,"code":"// Mock Users\nexport const mockUsers = [{\n  id: '1',\n  username: 'john.doe',\n  displayName: 'John Doe'\n}, {\n  id: '2',\n  username: 'jane.smith',\n  displayName: 'Jane Smith'\n}, {\n  id: '3',\n  username: 'mike.johnson',\n  displayName: 'Mike Johnson'\n}, {\n  id: '4',\n  username: 'sarah.wilson',\n  displayName: 'Sarah Wilson'\n}, {\n  id: '5',\n  username: 'david.brown',\n  displayName: 'David Brown'\n}];\n\n// Mock Time Entries\nexport const mockTimeEntries = [{\n  id: '1',\n  userId: '1',\n  technicianName: 'John Doe',\n  customerName: 'ABC Manufacturing',\n  clockInTime: new Date('2024-01-15T08:00:00'),\n  clockOutTime: new Date('2024-01-15T17:00:00'),\n  lunchStartTime: new Date('2024-01-15T12:00:00'),\n  lunchEndTime: new Date('2024-01-15T13:00:00'),\n  isActive: false,\n  isOnLunch: false,\n  duration: 32400000,\n  // 9 hours in milliseconds\n  formattedDuration: '09:00',\n  lunchDuration: 3600000,\n  // 1 hour in milliseconds\n  formattedLunchDuration: '01:00'\n}, {\n  id: '2',\n  userId: '2',\n  technicianName: 'Jane Smith',\n  customerName: 'XYZ Corporation',\n  clockInTime: new Date('2024-01-15T07:30:00'),\n  clockOutTime: undefined,\n  lunchStartTime: new Date('2024-01-15T12:30:00'),\n  lunchEndTime: undefined,\n  isActive: true,\n  isOnLunch: true,\n  duration: undefined,\n  formattedDuration: undefined,\n  lunchDuration: undefined,\n  formattedLunchDuration: undefined\n}, {\n  id: '3',\n  userId: '3',\n  technicianName: 'Mike Johnson',\n  customerName: 'Tech Solutions Inc',\n  clockInTime: new Date('2024-01-15T09:00:00'),\n  clockOutTime: undefined,\n  lunchStartTime: undefined,\n  lunchEndTime: undefined,\n  isActive: true,\n  isOnLunch: false,\n  duration: undefined,\n  formattedDuration: undefined,\n  lunchDuration: undefined,\n  formattedLunchDuration: undefined\n}, {\n  id: '4',\n  userId: '4',\n  technicianName: 'Sarah Wilson',\n  customerName: 'Global Industries',\n  clockInTime: new Date('2024-01-14T08:15:00'),\n  clockOutTime: new Date('2024-01-14T16:45:00'),\n  lunchStartTime: new Date('2024-01-14T12:00:00'),\n  lunchEndTime: new Date('2024-01-14T13:00:00'),\n  isActive: false,\n  isOnLunch: false,\n  duration: 30600000,\n  // 8.5 hours in milliseconds\n  formattedDuration: '08:30',\n  lunchDuration: 3600000,\n  // 1 hour in milliseconds\n  formattedLunchDuration: '01:00'\n}, {\n  id: '5',\n  userId: '5',\n  technicianName: 'David Brown',\n  customerName: 'Innovation Labs',\n  clockInTime: new Date('2024-01-15T06:00:00'),\n  clockOutTime: new Date('2024-01-15T14:30:00'),\n  lunchStartTime: new Date('2024-01-15T10:30:00'),\n  lunchEndTime: new Date('2024-01-15T11:00:00'),\n  isActive: false,\n  isOnLunch: false,\n  duration: 30600000,\n  // 8.5 hours in milliseconds\n  formattedDuration: '08:30',\n  lunchDuration: 1800000,\n  // 30 minutes in milliseconds\n  formattedLunchDuration: '00:30'\n}, {\n  id: '6',\n  userId: '1',\n  technicianName: 'John Doe',\n  customerName: 'ABC Manufacturing',\n  clockInTime: new Date('2024-01-14T08:00:00'),\n  clockOutTime: new Date('2024-01-14T17:00:00'),\n  lunchStartTime: new Date('2024-01-14T12:00:00'),\n  lunchEndTime: new Date('2024-01-14T13:00:00'),\n  isActive: false,\n  isOnLunch: false,\n  duration: 32400000,\n  // 9 hours in milliseconds\n  formattedDuration: '09:00',\n  lunchDuration: 3600000,\n  // 1 hour in milliseconds\n  formattedLunchDuration: '01:00'\n}, {\n  id: '7',\n  userId: '2',\n  technicianName: 'Jane Smith',\n  customerName: 'XYZ Corporation',\n  clockInTime: new Date('2024-01-14T07:30:00'),\n  clockOutTime: new Date('2024-01-14T16:30:00'),\n  lunchStartTime: new Date('2024-01-14T12:00:00'),\n  lunchEndTime: new Date('2024-01-14T13:00:00'),\n  isActive: false,\n  isOnLunch: false,\n  duration: 32400000,\n  // 9 hours in milliseconds\n  formattedDuration: '09:00',\n  lunchDuration: 3600000,\n  // 1 hour in milliseconds\n  formattedLunchDuration: '01:00'\n}];\n\n// Calculate dashboard stats from mock data\nexport const calculateDashboardStats = entries => {\n  const totalEntries = entries.length;\n  const activeEntries = entries.filter(entry => entry.isActive).length;\n  const totalHours = entries.filter(entry => entry.duration).reduce((sum, entry) => sum + (entry.duration || 0), 0) / (1000 * 60 * 60);\n  const averageHoursPerDay = totalHours / Math.max(1, new Set(entries.map(e => e.clockInTime.toDateString())).size);\n  const techniciansWorking = new Set(entries.filter(entry => entry.isActive).map(entry => entry.userId)).size;\n  return {\n    totalEntries,\n    activeEntries,\n    totalHours,\n    averageHoursPerDay,\n    techniciansWorking\n  };\n};\nexport const mockDashboardStats = calculateDashboardStats(mockTimeEntries);","map":{"version":3,"names":["mockUsers","id","username","displayName","mockTimeEntries","userId","technicianName","customerName","clockInTime","Date","clockOutTime","lunchStartTime","lunchEndTime","isActive","isOnLunch","duration","formattedDuration","lunchDuration","formattedLunchDuration","undefined","calculateDashboardStats","entries","totalEntries","length","activeEntries","filter","entry","totalHours","reduce","sum","averageHoursPerDay","Math","max","Set","map","e","toDateString","size","techniciansWorking","mockDashboardStats"],"sources":["/Users/jasonbaker/Documents/ICAV Time Tracker/WebApp/src/data/mockData.ts"],"sourcesContent":["import { TimeEntry, User, DashboardStats } from '../types';\n\n// Mock Users\nexport const mockUsers: User[] = [\n  { id: '1', username: 'john.doe', displayName: 'John Doe' },\n  { id: '2', username: 'jane.smith', displayName: 'Jane Smith' },\n  { id: '3', username: 'mike.johnson', displayName: 'Mike Johnson' },\n  { id: '4', username: 'sarah.wilson', displayName: 'Sarah Wilson' },\n  { id: '5', username: 'david.brown', displayName: 'David Brown' },\n];\n\n// Mock Time Entries\nexport const mockTimeEntries: TimeEntry[] = [\n  {\n    id: '1',\n    userId: '1',\n    technicianName: 'John Doe',\n    customerName: 'ABC Manufacturing',\n    clockInTime: new Date('2024-01-15T08:00:00'),\n    clockOutTime: new Date('2024-01-15T17:00:00'),\n    lunchStartTime: new Date('2024-01-15T12:00:00'),\n    lunchEndTime: new Date('2024-01-15T13:00:00'),\n    isActive: false,\n    isOnLunch: false,\n    duration: 32400000, // 9 hours in milliseconds\n    formattedDuration: '09:00',\n    lunchDuration: 3600000, // 1 hour in milliseconds\n    formattedLunchDuration: '01:00',\n  },\n  {\n    id: '2',\n    userId: '2',\n    technicianName: 'Jane Smith',\n    customerName: 'XYZ Corporation',\n    clockInTime: new Date('2024-01-15T07:30:00'),\n    clockOutTime: undefined,\n    lunchStartTime: new Date('2024-01-15T12:30:00'),\n    lunchEndTime: undefined,\n    isActive: true,\n    isOnLunch: true,\n    duration: undefined,\n    formattedDuration: undefined,\n    lunchDuration: undefined,\n    formattedLunchDuration: undefined,\n  },\n  {\n    id: '3',\n    userId: '3',\n    technicianName: 'Mike Johnson',\n    customerName: 'Tech Solutions Inc',\n    clockInTime: new Date('2024-01-15T09:00:00'),\n    clockOutTime: undefined,\n    lunchStartTime: undefined,\n    lunchEndTime: undefined,\n    isActive: true,\n    isOnLunch: false,\n    duration: undefined,\n    formattedDuration: undefined,\n    lunchDuration: undefined,\n    formattedLunchDuration: undefined,\n  },\n  {\n    id: '4',\n    userId: '4',\n    technicianName: 'Sarah Wilson',\n    customerName: 'Global Industries',\n    clockInTime: new Date('2024-01-14T08:15:00'),\n    clockOutTime: new Date('2024-01-14T16:45:00'),\n    lunchStartTime: new Date('2024-01-14T12:00:00'),\n    lunchEndTime: new Date('2024-01-14T13:00:00'),\n    isActive: false,\n    isOnLunch: false,\n    duration: 30600000, // 8.5 hours in milliseconds\n    formattedDuration: '08:30',\n    lunchDuration: 3600000, // 1 hour in milliseconds\n    formattedLunchDuration: '01:00',\n  },\n  {\n    id: '5',\n    userId: '5',\n    technicianName: 'David Brown',\n    customerName: 'Innovation Labs',\n    clockInTime: new Date('2024-01-15T06:00:00'),\n    clockOutTime: new Date('2024-01-15T14:30:00'),\n    lunchStartTime: new Date('2024-01-15T10:30:00'),\n    lunchEndTime: new Date('2024-01-15T11:00:00'),\n    isActive: false,\n    isOnLunch: false,\n    duration: 30600000, // 8.5 hours in milliseconds\n    formattedDuration: '08:30',\n    lunchDuration: 1800000, // 30 minutes in milliseconds\n    formattedLunchDuration: '00:30',\n  },\n  {\n    id: '6',\n    userId: '1',\n    technicianName: 'John Doe',\n    customerName: 'ABC Manufacturing',\n    clockInTime: new Date('2024-01-14T08:00:00'),\n    clockOutTime: new Date('2024-01-14T17:00:00'),\n    lunchStartTime: new Date('2024-01-14T12:00:00'),\n    lunchEndTime: new Date('2024-01-14T13:00:00'),\n    isActive: false,\n    isOnLunch: false,\n    duration: 32400000, // 9 hours in milliseconds\n    formattedDuration: '09:00',\n    lunchDuration: 3600000, // 1 hour in milliseconds\n    formattedLunchDuration: '01:00',\n  },\n  {\n    id: '7',\n    userId: '2',\n    technicianName: 'Jane Smith',\n    customerName: 'XYZ Corporation',\n    clockInTime: new Date('2024-01-14T07:30:00'),\n    clockOutTime: new Date('2024-01-14T16:30:00'),\n    lunchStartTime: new Date('2024-01-14T12:00:00'),\n    lunchEndTime: new Date('2024-01-14T13:00:00'),\n    isActive: false,\n    isOnLunch: false,\n    duration: 32400000, // 9 hours in milliseconds\n    formattedDuration: '09:00',\n    lunchDuration: 3600000, // 1 hour in milliseconds\n    formattedLunchDuration: '01:00',\n  },\n];\n\n// Calculate dashboard stats from mock data\nexport const calculateDashboardStats = (entries: TimeEntry[]): DashboardStats => {\n  const totalEntries = entries.length;\n  const activeEntries = entries.filter(entry => entry.isActive).length;\n  const totalHours = entries\n    .filter(entry => entry.duration)\n    .reduce((sum, entry) => sum + (entry.duration || 0), 0) / (1000 * 60 * 60);\n  const averageHoursPerDay = totalHours / Math.max(1, new Set(entries.map(e => e.clockInTime.toDateString())).size);\n  const techniciansWorking = new Set(entries.filter(entry => entry.isActive).map(entry => entry.userId)).size;\n\n  return {\n    totalEntries,\n    activeEntries,\n    totalHours,\n    averageHoursPerDay,\n    techniciansWorking,\n  };\n};\n\nexport const mockDashboardStats = calculateDashboardStats(mockTimeEntries); "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}