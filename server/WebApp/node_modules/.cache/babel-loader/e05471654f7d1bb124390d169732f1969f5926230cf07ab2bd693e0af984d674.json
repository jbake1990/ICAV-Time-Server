{"ast":null,"code":"import { format, parseISO, isToday, isYesterday, isThisWeek, isThisMonth } from 'date-fns';\nexport const formatTime = date => {\n  const dateObj = typeof date === 'string' ? parseISO(date) : date;\n  return format(dateObj, 'h:mm a');\n};\nexport const formatDate = date => {\n  const dateObj = typeof date === 'string' ? parseISO(date) : date;\n  return format(dateObj, 'MMM d, yyyy');\n};\nexport const formatDateTime = date => {\n  const dateObj = typeof date === 'string' ? parseISO(date) : date;\n  return format(dateObj, 'MMM d, yyyy h:mm a');\n};\nexport const getRelativeDate = date => {\n  const dateObj = typeof date === 'string' ? parseISO(date) : date;\n  if (isToday(dateObj)) return 'Today';\n  if (isYesterday(dateObj)) return 'Yesterday';\n  if (isThisWeek(dateObj)) return format(dateObj, 'EEEE');\n  if (isThisMonth(dateObj)) return format(dateObj, 'MMM d');\n  return format(dateObj, 'MMM d, yyyy');\n};\nexport const calculateDuration = (startTime, endTime) => {\n  if (!endTime) return null;\n  return endTime.getTime() - startTime.getTime();\n};\nexport const formatDuration = durationMs => {\n  const hours = Math.floor(durationMs / (1000 * 60 * 60));\n  const minutes = Math.floor(durationMs % (1000 * 60 * 60) / (1000 * 60));\n  return `${hours.toString().padStart(2, '0')}:${minutes.toString().padStart(2, '0')}`;\n};\nexport const formatDurationHours = durationMs => {\n  const hours = durationMs / (1000 * 60 * 60);\n  return hours.toFixed(2);\n};\nexport const getStatusColor = (isActive, isOnLunch) => {\n  if (isOnLunch) return 'text-yellow-600 bg-yellow-100';\n  if (isActive) return 'text-green-600 bg-green-100';\n  return 'text-gray-600 bg-gray-100';\n};\nexport const getStatusText = (isActive, isOnLunch) => {\n  if (isOnLunch) return 'On Lunch';\n  if (isActive) return 'Active';\n  return 'Completed';\n};","map":{"version":3,"names":["format","parseISO","isToday","isYesterday","isThisWeek","isThisMonth","formatTime","date","dateObj","formatDate","formatDateTime","getRelativeDate","calculateDuration","startTime","endTime","getTime","formatDuration","durationMs","hours","Math","floor","minutes","toString","padStart","formatDurationHours","toFixed","getStatusColor","isActive","isOnLunch","getStatusText"],"sources":["/Users/jasonbaker/Documents/ICAV Time Tracker/WebApp/src/utils/timeUtils.ts"],"sourcesContent":["import { format, parseISO, isToday, isYesterday, isThisWeek, isThisMonth } from 'date-fns';\n\nexport const formatTime = (date: Date | string): string => {\n  const dateObj = typeof date === 'string' ? parseISO(date) : date;\n  return format(dateObj, 'h:mm a');\n};\n\nexport const formatDate = (date: Date | string): string => {\n  const dateObj = typeof date === 'string' ? parseISO(date) : date;\n  return format(dateObj, 'MMM d, yyyy');\n};\n\nexport const formatDateTime = (date: Date | string): string => {\n  const dateObj = typeof date === 'string' ? parseISO(date) : date;\n  return format(dateObj, 'MMM d, yyyy h:mm a');\n};\n\nexport const getRelativeDate = (date: Date | string): string => {\n  const dateObj = typeof date === 'string' ? parseISO(date) : date;\n  \n  if (isToday(dateObj)) return 'Today';\n  if (isYesterday(dateObj)) return 'Yesterday';\n  if (isThisWeek(dateObj)) return format(dateObj, 'EEEE');\n  if (isThisMonth(dateObj)) return format(dateObj, 'MMM d');\n  \n  return format(dateObj, 'MMM d, yyyy');\n};\n\nexport const calculateDuration = (startTime: Date, endTime?: Date): number | null => {\n  if (!endTime) return null;\n  return endTime.getTime() - startTime.getTime();\n};\n\nexport const formatDuration = (durationMs: number): string => {\n  const hours = Math.floor(durationMs / (1000 * 60 * 60));\n  const minutes = Math.floor((durationMs % (1000 * 60 * 60)) / (1000 * 60));\n  return `${hours.toString().padStart(2, '0')}:${minutes.toString().padStart(2, '0')}`;\n};\n\nexport const formatDurationHours = (durationMs: number): string => {\n  const hours = durationMs / (1000 * 60 * 60);\n  return hours.toFixed(2);\n};\n\nexport const getStatusColor = (isActive: boolean, isOnLunch: boolean): string => {\n  if (isOnLunch) return 'text-yellow-600 bg-yellow-100';\n  if (isActive) return 'text-green-600 bg-green-100';\n  return 'text-gray-600 bg-gray-100';\n};\n\nexport const getStatusText = (isActive: boolean, isOnLunch: boolean): string => {\n  if (isOnLunch) return 'On Lunch';\n  if (isActive) return 'Active';\n  return 'Completed';\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}