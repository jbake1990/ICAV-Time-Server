{"ast":null,"code":"import{format,parseISO,isToday,isYesterday,isThisWeek,isThisMonth}from'date-fns';export const formatTime=date=>{try{const dateObj=typeof date==='string'?parseISO(date):date;if(isNaN(dateObj.getTime())){return'Invalid Time';}return format(dateObj,'h:mm a');}catch(error){return'Invalid Time';}};export const formatDate=date=>{try{const dateObj=typeof date==='string'?parseISO(date):date;if(isNaN(dateObj.getTime())){return'Invalid Date';}return format(dateObj,'MMM d, yyyy');}catch(error){return'Invalid Date';}};export const formatDateTime=date=>{try{const dateObj=typeof date==='string'?parseISO(date):date;if(isNaN(dateObj.getTime())){return'Invalid Date/Time';}return format(dateObj,'MMM d, yyyy h:mm a');}catch(error){return'Invalid Date/Time';}};export const getRelativeDate=date=>{try{const dateObj=typeof date==='string'?parseISO(date):date;if(isNaN(dateObj.getTime())){return'Invalid Date';}if(isToday(dateObj))return'Today';if(isYesterday(dateObj))return'Yesterday';if(isThisWeek(dateObj))return format(dateObj,'EEEE');if(isThisMonth(dateObj))return format(dateObj,'MMM d');return format(dateObj,'MMM d, yyyy');}catch(error){return'Invalid Date';}};export const calculateDuration=(startTime,endTime)=>{if(!endTime)return null;return endTime.getTime()-startTime.getTime();};export const formatDuration=durationMs=>{const hours=Math.floor(durationMs/(1000*60*60));const minutes=Math.floor(durationMs%(1000*60*60)/(1000*60));return`${hours.toString().padStart(2,'0')}:${minutes.toString().padStart(2,'0')}`;};export const formatDurationHours=durationMs=>{const hours=durationMs/(1000*60*60);return hours.toFixed(2);};export const getStatusColor=(isActive,isOnLunch,isDriving)=>{if(isDriving)return'text-blue-600 bg-blue-100';if(isOnLunch)return'text-yellow-600 bg-yellow-100';if(isActive)return'text-green-600 bg-green-100';return'text-gray-600 bg-gray-100';};export const getStatusText=(isActive,isOnLunch,isDriving)=>{if(isDriving)return'Driving';if(isOnLunch)return'On Lunch';if(isActive)return'Active';return'Completed';};","map":{"version":3,"names":["format","parseISO","isToday","isYesterday","isThisWeek","isThisMonth","formatTime","date","dateObj","isNaN","getTime","error","formatDate","formatDateTime","getRelativeDate","calculateDuration","startTime","endTime","formatDuration","durationMs","hours","Math","floor","minutes","toString","padStart","formatDurationHours","toFixed","getStatusColor","isActive","isOnLunch","isDriving","getStatusText"],"sources":["/Users/jasonbaker/Documents/ICAV Time Tracker/icav-time-dev/server/WebApp/src/utils/timeUtils.ts"],"sourcesContent":["import { format, parseISO, isToday, isYesterday, isThisWeek, isThisMonth } from 'date-fns';\n\nexport const formatTime = (date: Date | string): string => {\n  try {\n    const dateObj = typeof date === 'string' ? parseISO(date) : date;\n    if (isNaN(dateObj.getTime())) {\n      return 'Invalid Time';\n    }\n    return format(dateObj, 'h:mm a');\n  } catch (error) {\n    return 'Invalid Time';\n  }\n};\n\nexport const formatDate = (date: Date | string): string => {\n  try {\n    const dateObj = typeof date === 'string' ? parseISO(date) : date;\n    if (isNaN(dateObj.getTime())) {\n      return 'Invalid Date';\n    }\n    return format(dateObj, 'MMM d, yyyy');\n  } catch (error) {\n    return 'Invalid Date';\n  }\n};\n\nexport const formatDateTime = (date: Date | string): string => {\n  try {\n    const dateObj = typeof date === 'string' ? parseISO(date) : date;\n    if (isNaN(dateObj.getTime())) {\n      return 'Invalid Date/Time';\n    }\n    return format(dateObj, 'MMM d, yyyy h:mm a');\n  } catch (error) {\n    return 'Invalid Date/Time';\n  }\n};\n\nexport const getRelativeDate = (date: Date | string): string => {\n  try {\n    const dateObj = typeof date === 'string' ? parseISO(date) : date;\n    if (isNaN(dateObj.getTime())) {\n      return 'Invalid Date';\n    }\n    \n    if (isToday(dateObj)) return 'Today';\n    if (isYesterday(dateObj)) return 'Yesterday';\n    if (isThisWeek(dateObj)) return format(dateObj, 'EEEE');\n    if (isThisMonth(dateObj)) return format(dateObj, 'MMM d');\n    \n    return format(dateObj, 'MMM d, yyyy');\n  } catch (error) {\n    return 'Invalid Date';\n  }\n};\n\nexport const calculateDuration = (startTime: Date, endTime?: Date): number | null => {\n  if (!endTime) return null;\n  return endTime.getTime() - startTime.getTime();\n};\n\nexport const formatDuration = (durationMs: number): string => {\n  const hours = Math.floor(durationMs / (1000 * 60 * 60));\n  const minutes = Math.floor((durationMs % (1000 * 60 * 60)) / (1000 * 60));\n  return `${hours.toString().padStart(2, '0')}:${minutes.toString().padStart(2, '0')}`;\n};\n\nexport const formatDurationHours = (durationMs: number): string => {\n  const hours = durationMs / (1000 * 60 * 60);\n  return hours.toFixed(2);\n};\n\nexport const getStatusColor = (isActive: boolean, isOnLunch: boolean, isDriving: boolean): string => {\n  if (isDriving) return 'text-blue-600 bg-blue-100';\n  if (isOnLunch) return 'text-yellow-600 bg-yellow-100';\n  if (isActive) return 'text-green-600 bg-green-100';\n  return 'text-gray-600 bg-gray-100';\n};\n\nexport const getStatusText = (isActive: boolean, isOnLunch: boolean, isDriving: boolean): string => {\n  if (isDriving) return 'Driving';\n  if (isOnLunch) return 'On Lunch';\n  if (isActive) return 'Active';\n  return 'Completed';\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}